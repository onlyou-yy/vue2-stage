{"version":3,"file":"vue.js","sources":["../src/compiler/parse.js","../src/compiler/index.js","../src/utils.js","../src/globalAPI.js","../src/observe/dep.js","../src/observe/watcher.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["/**\n * 一般解析html 都不会自己去写，可以使用第三方包，htmlparser2\n * 也可以在 https://astexplorer.net/ 感受 ast的转化\n */\n\n//可视化正则表达式 https://regexper.com\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;//匹配标签名\n//?:代表不捕获分组,使用match后将不会?:的分组不会出现\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;//匹配标签名和带命名空间的标签,如<namespace:div>\n//匹配开始标签\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);//匹配到的分组是一个标签名 <div 匹配到的分组就是开始标签的名字\n//匹配结束标签\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);//匹配的是 </xxx> 最终匹配到的分组就是结束标签的名字\n//匹配属性,第一个属性就是 key，value 就是 分组3/4/5\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>']+)))?/;\n//匹配闭合标签 > 或者 />\nconst startTagClose = /^\\s*(\\/?)>/;// /> <br/>\n\n\n//解析html,vue3并不是使用正则来进行匹配的\nexport function parseHTML(html){\n  const ELEMENT_TYPE = 1;\n  const TEXT_TYPE = 3;\n  const stack = [];//用来存放元素的栈\n  let currentParent;//指向栈顶元素\n  let root;//根节点\n  //----------------- 转成 ast -------------------\n  //创建ast元素\n  function createASTElement(tag,attrs){\n    return {\n      tag,\n      attrs,\n      type:ELEMENT_TYPE,\n      children:[],\n      parent:null\n    }\n  }\n  //获取开始标签回调\n  function start(tag,attrs){\n    let node = createASTElement(tag,attrs);\n    if(!root){//如果还没有根节点，当前ast节点就是根节点\n      root = node;\n    }\n    if(currentParent){\n      node.parent = currentParent;\n      currentParent.children.push(node);\n    }\n    stack.push(node);\n    currentParent = node;\n  }\n  //获取标签中内容回调\n  function chars(text){\n    text = text.replace(/\\s/g,'');\n    // 文本直接放到当前节点中\n    text && currentParent.children.push({\n      type:TEXT_TYPE,\n      text,\n      parent:currentParent\n    })\n  }\n  //获取结束标签回调\n  function end(tag){\n    stack.pop();//每次遇到结束标签都进行出栈操作\n    currentParent = stack[stack.length - 1];//重新指向栈顶\n  }\n  //----------------- 转成 ast -------------------\n\n  //截取内容\n  function advance(length){\n    html = html.substring(length);\n  }\n  //匹配解析开始标签\n  function parseStartTag(){\n    const start = html.match(startTagOpen);\n    if(start){\n      // 是开始标签\n      const match = {\n        tagName:start[1],//标签名\n        attrs:[],\n      }\n      //每次匹配成功都将成功的部分删除掉，然后继续匹配，这样就不会重复匹配之前的\n      advance(start[0].length);\n\n      //如果不是开始标签的结束就一直匹配下去\n      let attr,end;\n      while(!(end = html.match(startTagClose)) && (attr = html.match(attribute))){\n        //删除长度\n        advance(attr[0].length);\n        //保存属性\n        match.attrs.push({name:attr[1],value:attr[3]||attr[4]||attr[5]||true})\n      }\n      //匹配完成后，如果有 开始标签的结束 就把结束也删除\n      if(end){\n        advance(end[0].length);\n      }\n      return match;\n    }\n    //不是开始标签\n    return false;\n  }\n  //html 最开始肯定是一个 <\n  while(html){\n    let textEnd = html.indexOf(\"<\");\n    //如果textEnd是0 表示 是标签，如<div id=\"app\">{{name}}</div>\n    //可能是开始标签，一开始的时候是开始标签 <div id=\"app\">\n    //也可能是结束标签，\n    //  因为每次匹配到内容都会把响应的内容删除掉，\n    //  所以在匹配到开始标签之后textEnd > 0 再匹配到文本，最后就剩下 </div>\n    if(textEnd === 0){\n      //开始标签的匹配结果\n      const startTagMatch = parseStartTag();\n      if(startTagMatch){\n        //抛出数据，生成ast\n        start(startTagMatch.tagName,startTagMatch.attrs);\n        continue;\n      }\n\n      //结束标签的匹配结果\n      const endTagMatch = html.match(endTag);\n      if(endTagMatch){\n        //抛出数据，生成ast\n        end(endTagMatch[1]);\n        advance(endTagMatch[0].length);\n        continue;\n      }\n    }\n    //如果 textEnd > 0 就是文本的结束位置\n    if(textEnd > 0){\n      //标签中的内容\n      let text = html.substring(0,textEnd);\n      if(text){\n        //抛出数据，生成ast\n        chars(text);\n        advance(text.length);\n      }\n    }\n  }\n  return root;\n}","import { parseHTML } from \"./parse\";\n\n/**生成属性代码 */\nfunction genProps(attrs){\n  let str = '';\n  for(let i = 0;i < attrs.length;i++){\n    let attr = attrs[i];\n    if(attr.name == 'style'){\n      //如果是 style 就将值转换成对象,color:red;background:red -> {color:'red',background:'red'}\n      let obj = {};\n      attr.value.split(';').forEach(item=>{\n        let [key,value] = item.split(':');\n        obj[key] = value;\n      })\n      attr.value = obj;\n    }\n    str += `${attr.name}:${JSON.stringify(attr.value)},`;\n  }\n  return `{${str.slice(0,-1)}}`;//去除最后一个 ,\n}\n\n//匹配表达式变量\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;//{{ xxx }}\n/**生成节点代码 */\nfunction gen(node){\n  if(node.type === 1){\n    //标签节点\n    return codegen(node);\n  }else{\n    //文本\n    let text = node.text;\n    if(defaultTagRE.test(text)){\n      //带模版语法的文本 {{name}} hello {{age}} world\n      let token = [];\n      //捕获匹配到的值\n      let match;\n      //因为正则表达式中的 g，\n      //在匹配的时候会把上一次匹配到的字符串的最后一个字符的索引用lastIndex保存，\n      //无论是 .test 还是 .match .exec 都会记录\n      //下次就会从lastIndex的位置开始匹配，\n      //有三种方式可以重置开始位置，1:重新设置 reg.lastIndex = 0 2:重新赋值表达式 reg = // 3:重新编译表达式 reg.compile()\n      defaultTagRE.lastIndex = 0;\n      let lastIndex = 0;//上次匹配到的位置\n      while(match = defaultTagRE.exec(text)){\n        let index = match.index;//当前匹配到的位置\n        if(index > lastIndex){\n          //如果上次匹配到的位置小于当前位置就把中间的这段内容也放进去\n          token.push(JSON.stringify(text.slice(lastIndex,index)));\n        }\n        token.push(`_s(${match[1].trim()})`);\n        lastIndex = index + match[0].length;\n      }\n      if(lastIndex < text.length){\n        token.push(JSON.stringify(text.slice(lastIndex)));\n      }\n      return `_v(${token.join('+')})`;\n    }else{\n      //普通纯文本\n      return `_v('${text}')`;\n    }\n  }\n}\n/**生成children代码 */\nfunction genChildren(children){\n  return children.map(child => gen(child)).join(',');\n}\n\n/*生成渲染函数代码 */\nfunction codegen(ast){\n  let children = genChildren(ast.children);\n  let code = (\n    `_c(\n      '${ast.tag}',\n      ${ast.attrs.length > 0 ? genProps(ast.attrs): 'null'}\n      ${ast.children.length ? `,${children}`:''}\n    )`\n  );\n  return code;\n}\n\n/**编译模版形成渲染函数 */\nexport function compileToFunction(template){\n  // 1将template 转化成 ast 语法树\n  let ast = parseHTML(template);\n  // 2生成 render方法（render）,是用with指定执行上下文\n  // 模版引擎的原理就是 with + new Function(code)\n  let code = `with(this){return ${codegen(ast)};}`;\n  // 根据代码生成函数\n  let render = new Function(code);\n  return render;\n}","/**合并选项 */\nexport function mergeOptions(parent,child){\n  const options = {};//定义一个新对象用来存储合并后的对象\n  //先合并父选项\n  for(let key in parent){\n    mergeField(key);\n  }\n  //再用子选项来覆盖和合并父选项\n  for(let key in child){\n    if(!parent.hasOwnProperty(key)){\n      mergeField(key);\n    }\n  }\n  function mergeField(key){\n    //采用策略模式减少 if/else\n    //如果不在策略中优先使用子\n    if(strats[key]){\n      options[key] = strats[key](parent[key],child[key]);\n    }else{\n      //优先使用子的，再使用父的\n      options[key] = child[key] || parent[key];\n    }\n  }\n  return options;\n}\n\n//策略模式\nconst strats = {};\nconst LIFECYCLE = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n];\nLIFECYCLE.forEach(hook => {\n  strats[hook] = function(p,c){\n    // 第一次合并：{} + {created:fn} => {created:[fn]}\n    // 第二次合并：{created:fn1} + {created:fn2} => {created:[fn1,fn2]}\n    if(c){\n      if(p){\n        // 父子都有\n        return p.concat(c);\n      }else{\n        // 只有子有,初始化过程\n        return [c];\n      }\n    }else{\n      // 如果子没有，就直接使用父的\n      // 只要经过初始化过程， 父 就已经是个数组\n      // 如 {created:[fn]} + {a:1}\n      return p;\n    }\n  }\n})","import { mergeOptions } from \"./utils\";\n\nexport function initGlobalAPI(Vue){\n  //Vue静态属性和方法\n  Vue.options = {};\n  Vue.mixin = function(mixin){\n    //将用户选项和全局的options合并\n    this.options = mergeOptions(this.options,mixin);\n    return this;\n  }\n}","let id = 0;\nclass Dep{\n  constructor(){\n    this.id = id++;\n    // 属性的dep 需要收集 watcher\n    // 存放当前属性对应的watcher有哪些\n    this.subs = [];\n  }\n  depend(){\n    Dep.target.addDep(this);//让watcher记住dep\n  }\n  addSub(watcher){\n    this.subs.push(watcher);\n  }\n  /**通知watcher进行更新 */\n  notify(){\n    this.subs.forEach(watcher => watcher.update());\n  }\n}\n\n//添加一个静态属性，用来存放临时的 watcher\n//当 watcher 调用 get() 方法进行渲染的时候会去vm上取值，\n//取值的时候就会触发数据劫持的 get ，此时就可以将这个watcher进行收集了\nDep.target = null;\n\n/**watcher栈 */\nlet stack = [];\nexport function pushTarget(watcher){\n  stack.push(watcher);\n  Dep.target = watcher;\n}\nexport function popTarget(watcher){\n  stack.pop();\n  Dep.target = stack[stack.length - 1];\n}\n\nexport default Dep;","/**\n * 每一个组件都有一个watcher\n * 这样可以做的局部更新\n */\n\nimport Dep, { popTarget, pushTarget } from \"./dep\";\n\nlet id = 0;\n\n// dep 和 watcher 就是观察者模式\n// 每个属性有一个 dep（属性就是被观察者），watcher就是观察者（属性变化了会通知观察者更新）\n\n// 需要给每个属性都增加一个dep,目的就是收集watcher\n// 一个组件中有多个属性（n个属性会对应一个视图）n个dep对应一个watcher\n// 1个属性也可以被多个组件使用，所以 1个dep对应多个watcher\n// 所以 dep 和 watcher 是 多对多的关系\n\n//当我们创建渲染watcher的时候我们就会把当前的渲染watcher放到Dep.target上\n//调用 _render() 会取值，触发属性的 get\nclass Watcher{\n  /**\n   * @param vm 组件实例\n   * @param exprOrFn 回调的方法\n   * @param options 是否是一个渲染watcher\n   */\n  constructor(vm,exprOrFn,options,cb){\n    //id 用来区分每个组件的watcher\n    this.id = id++;\n    //是否是一个渲染watcher\n    this.renderWatcher = options;\n\n    /**########################## watch相关 ########################## */\n    this.cb = cb;\n    //exprOrFn可能是函数也可能是字符串,所以需要统一先处理成函数\n    if(typeof exprOrFn === 'string'){\n      this.getter = function(){\n        return vm[exprOrFn];\n      }\n    }else{\n      //getter 意味着调用这个函数可以发生取值操作,也就是收集依赖\n      this.getter = exprOrFn;\n    }\n    //标识是否是用户自己定义的wathcer\n    this.user = options.user;\n    /**########################## watch相关 ########################## */\n    \n    /**########################## computed相关 ######################### */\n    // 后续实现计算属性和一些清楚工作的时候需要用到dep\n    // 比如说某个组件卸载了，需要再dep中移除当前watcher\n    // 所以再这里还需要将dep也记录收集一下\n    this.deps = [];\n    this.depsId = new Set();\n\n    //是否懒加载\n    this.lazy = options.lazy;\n    //是否是脏\n    this.dirty = this.lazy;\n    /**########################## computed相关 ######################### */\n\n    this.vm = vm;\n\n    //初始的时候调用一下 getter\n    //如果是懒加载，那么第一次时不用执行的\n    //存储第一次执行的值（老值） \n    this.value = this.lazy ? undefined :this.get();\n  }\n  //获取计算属性处理结果(计算属性watcher)\n  evaluate(){\n    //执行get方法获取到用户定义的计算属性的getters的返回值\n    this.value = this.get();\n    //重新定义为脏\n    this.dirty = false;\n  }\n  get(){\n    pushTarget(this);//缓存当前 watcher 实例\n    let value = this.getter.call(this.vm);//会去vm上取值\n    popTarget();//重新出栈\n    return value\n  }\n  addDep(dep){\n    // 一个组件 watcher 中，可能会使用多个重复的属性，重复的属性不需要记录\n    let id = dep.id;\n    if(!this.depsId.has(id)){\n      this.deps.push(dep); //watcher记录dep\n      this.depsId.add(id);\n      dep.addSub(this);//dep记录watcher\n    }\n  }\n  /**让属性收集watcher */\n  depend(){\n    let i = this.deps.length;\n    while(i--){\n      // 让计算属性依赖的属性去收集上层的渲染watcher\n      this.deps[i].depend();\n    }\n  }\n  /**重新更新 */\n  update(){\n    if(this.lazy){\n      // 计算属性watcher，将标识计算属性是脏值\n      this.dirty = true;\n    }else{\n      // this.get();\n      // 异步更新先将当前 watcher 暂存起来\n      queueWatcher(this);\n    }\n  }\n  run(){\n    //获取老值\n    let oldVal = this.value;\n    //获取新值\n    let newVal = this.get();\n    if(this.user){\n      //如果是用户自己定义wathcer 在值变化的时候就在执行一下回调\n      this.cb.call(this.vm,newVal,oldVal);\n    }\n  }\n}\n\n/**刷新执行队列命令 */\nfunction flushSchedulerQueue(){\n  // 在刷新的过程中可能还有新的watcher加入，重新放到queue中，所以先复制一份queue\n  let flushQueue = queue.slice(0);\n  queue = [];\n  has = {};\n  pending = false;\n  flushQueue.forEach(q => q.run());\n}\n\nlet queue = [];\nlet has = {};\nlet pending = false;//防抖\n/**缓存watcher */\nfunction queueWatcher(watcher){\n  let id = watcher.id;\n  if(!has[id]){\n    queue.push(watcher);\n    has[id] = true;\n    \n    if(!pending){\n      nextTick(flushSchedulerQueue, 0);\n      pending = true;\n    }\n  }\n}\n\n\n/**执行nextTick队列任务 */\nfunction flushCallbacks(){\n  let cbs = callbacks.slice(0);\n  callbacks = [];\n  waiting = false;\n  cbs.forEach(cb => cb());\n}\n\nlet callbacks = [];\nlet waiting = false;\n/**\n * 异步更新回调\n * nextTick 不是创建了一个异步任务，而是将这个任务维护到了队列中而已\n */\nexport function nextTick(cb){\n  callbacks.push(cb);\n  if(!waiting){\n    //创建异步任务的时候，在vue2中，并没有直接使用某个API，而是使用优雅降级的方式\n    //（vue3中因为已经不在兼容ie了，所以直接采用了promise）\n    //内部先采用优先顺序是： \n    // promise（ie不兼容）\n    // MutationObserver（H5新接口，只能在浏览器中使用）\n    // setImmediate（ie专享）\n    // setTimeout\n    // setTimeout(()=>{flushCallbacks();},0);\n    timerFunc();\n    waiting = true;\n  }\n}\n\n/**异步任务适配 */\nlet timerFunc;\nif(Promise){\n  timerFunc = () => {\n    Promise.resolve().then(flushCallbacks);\n  }\n}else if(MutationObserver){\n  let observer = MutationObserver(flushCallbacks);\n  let textNode = document.createTextNode(1);\n  observer.observe(textNode,{\n    characterData:true\n  });\n  timerFunc = () => {\n    textNode.textContent = 2\n  }\n}else if(setImmediate){\n  timerFunc = () => {\n    setImmediate(flushCallbacks);\n  }\n}else if(setImmediate){\n  timerFunc = () => {\n    setTimeout(flushCallbacks,0);\n  }\n}\n\nexport default Watcher;","/**生成虚拟节点，也就是vue中的 h(), _c() */\nexport function createElementVNode(vm,tag,data,...children){\n  if(data == null) data = {};\n  let key = data.key;\n  if(key){\n    delete data.key;\n  }\n  return vnode(vm,tag,key,data,children);\n}\n\n/**生成文本虚拟节点，_v() */\nexport function createTextVNode(vm,text){\n  return vnode(vm,undefined,undefined,undefined,undefined,text);\n}\n\n/**\n * 创建虚拟节点\n * ast做的事语法层面的转化，\n * vnode描述的DOM元素，可以增加一些自定义的属性\n */\nfunction vnode(vm,tag,key,data,children,text){\n  return {\n    vm,\n    tag,\n    key,\n    data,\n    children,\n    text\n  }\n}\n\n/**判断两个虚拟节点是否相同*/\nexport function isSameVnode(vnode1,vnode2){\n  return vnode1.tag === vnode2.tag && vnode1.key === vnode2.key;\n}","import { isSameVnode } from \".\";\n\n/**创建真实DOM */\nexport function createElm(vnode){\n  let {tag,data,children,text} = vnode;\n  if(typeof tag === 'string'){\n    //标签\n    //将真实DOM挂载到虚拟DOM上，方便后续修改属性\n    vnode.el = document.createElement(tag);\n    // 设置属性\n    patchProps(vnode.el,{},data);\n    // 添加子节点\n    children.forEach(child => {\n      vnode.el.appendChild(createElm(child));\n    })\n  }else{\n    //tag为undefined就是个文本节点\n    vnode.el = document.createTextNode(text);\n  }\n  return vnode.el;\n}\n\n/**更新和初始化真实DOM的属性 */\nexport function patchProps(el,oldProps = {},props = {}){\n  let oldStyle = oldProps.style || {};\n  let newStyle = props.style || {};\n  //老的有，新的没有，删除老的style\n  for(let key in oldStyle){\n    if(!newStyle[key]){\n      el.style[key] = '';\n    }\n  }\n  //老的有，新的没有，删除老的属性\n  for(let key in oldProps){\n    if(!props[key]){\n      el.removeAttribute(key);\n    }\n  }\n  //用新的覆盖老的\n  for(let key in props){\n    if(key === 'style'){//值是 [{color:'red'}]\n      for(let styleName in props.style){\n        el.style[styleName] = props.style[styleName];\n      }\n    }else{\n      el.setAttribute(key,props[key]);\n    }\n  }\n}\n\n/**初始化和更新DOM */\nexport function patch(oldVNode,vnode){\n  console.log(vnode);\n  //真实DOM中才有nodeType\n  const isRealElement = oldVNode.nodeType;\n  if(isRealElement){\n    //是真实DOM，进行初始化挂载\n    let elm = oldVNode;//当前节点\n    let parentElm = elm.parentNode;\n    //创建真实DOM\n    let newElm = createElm(vnode);\n    //先在原来的后面添加节点，然后再删除老节点\n    parentElm.insertBefore(newElm,elm.nextSibiling);//添加新节点\n    parentElm.removeChild(elm);//删除老节点\n    return newElm;\n  }else{\n    //diff 算法，对比两个虚拟DOM\n    //diff 算法是一个平级比较的过程，父亲与父亲比较，儿子与儿子比较\n\n    patchVnode(oldVNode,vnode);\n  }\n}\n\n//1.两个接待你不是同一个节点，直接删除老的换上新的（没有比对）\n//2.两个节点是同一个节点（判断节点的tag和key）比较两个节点的属性是否有差异\n//3.节点比较完后就需要比较他们的子节点\n/**对比两个虚拟节点 */\nfunction patchVnode(oldVNode,vnode){\n  if(!isSameVnode(oldVNode,vnode)){\n    //两个节点不一样,用老节点的父亲进行替换\n    let el = createElm(vnode);\n    return oldVNode.el.parentNode.replaceChild(el,oldVNode.el);\n  }\n  let el = vnode.el = oldVNode.el;//复用老节点元素\n  //文本的情况 tag为undefined时为文本\n  if(!oldVNode.tag){//是文本\n    if(oldVNode.text !== vnode.text){\n      // 用新节点文本替换就节点文本\n      el.textContent = vnode.text;\n    }\n  }\n\n  // 是标签，需要比较标签的属性\n  patchProps(el,oldVNode.data,vnode.data);\n\n  // 比较两个的儿子节点，一方有儿子，一方没儿子，还有就是来两方都有儿子\n  let oldChildren = oldVNode.children || [];\n  let newChildren = vnode.children || [];\n  if(oldChildren.length > 0 && newChildren.length > 0){\n    //两方都有儿子，比较两个人的儿子\n    updateChildren(el,oldChildren,newChildren);\n  }else if(newChildren.length > 0){\n    //没有老的，有新的，新增子节点\n    //将新节点元素挂载到节点上\n    mountChildren(el,newChildren);\n  }else if(oldChildren.length > 0){\n    //有老的，没有新的，删除子节点\n    el.innerHTML = \"\";\n  }\n  return el;\n}\n\n/**挂载子元素的父元素上 */\nfunction mountChildren(el,children){\n  for(let i = 0; i < children.length;i++){\n    let child = children[i];\n    el.appendChild(createElm(child))\n  }\n}\n\n/**对比更新两个子节点 */\nfunction updateChildren(el,oldChildren,newChildren){\n  //在vue2中采用双指针的方式来进行两子节点的对比，这样就会性能会比较高\n  /**场景1:头部比对\n   *    s1    e1\n   *    |     |\n   * o: a  b  c \n   * n: a  b  c  d\n   *    |        |\n   *    s2       e2\n   */\n  /**\n   * 对新老子节点列表，分别定义两个指针，\n   * 老节点开始指针 s1,老节点结束指针 e1\n   * 新节点开始指针 s1,新节点结束指针 e1\n   * ---------- 新增的情况 ------------\n   * 两组节点列表同时开始进行遍历循环，开始的时候 s1 和 s2 同时执行各自的第一位元素\n   * 如果两个节点是相同的就移动到第二位继续进行对比，如果相同就继续上面的步骤，\n   * 直到 s1 指向的位置大于 e1 的位置的时候，老节点 s1 停止,s2继续往下，\n   * s2 指向 d,表示 d 是新增的，将d添加到 el 中\n   */\n  /**场景2:尾部比对\n   *       s1    e1\n   *       |     |\n   * o:    a  b  c \n   * n: d  a  b  c\n   *    ｜       ｜\n   *    s2       e2\n   */\n  /**场景3:交叉比对 e1 == s2\n   *    s1       e1\n   *    |        |\n   * o: a  b  c  d\n   * n: d  a  b  c\n   *    ｜       ｜\n   *    s2       e2\n   *\n  **场景4:交叉比对 s1 == e2\n   *    s1       e1\n   *    |        |\n   * o: a  b  c  d\n   * n: d  c  b  a\n   *    ｜       ｜\n   *    s2       e2\n   */\n  /**场景5:乱序比对\n   *    s1       e1\n   *    |        |\n   * o: a  b  c  d\n   * n: d  c  b  a\n   *    ｜       ｜\n   *    s2       e2\n   */\n  let oldStartIndex = 0;//老节点开始指针\n  let newStartIndex = 0;//新节点开始指针\n  let oldEndIndex = oldChildren.length - 1;//老节点结束指针\n  let newEndIndex = newChildren.length - 1;//新节点结束指针\n\n  let oldStartVnode = oldChildren[0];\n  let newStartVnode = newChildren[0];\n  let oldEndVnode = oldChildren[oldEndIndex];\n  let newEndVnode = newChildren[newEndIndex];\n\n  /**创建 节点索引映射 */\n  function makeIndexByKey(children){\n    let map = {}\n    children.forEach((child,index)=>{\n      map[child.key] = index;\n    })\n    return map;\n  }\n  let map = makeIndexByKey(oldChildren);\n\n  //双方有一方头指针大于尾部指针则停止循环\n  while(oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex){\n    //复用都是针对老的节点列表而言的\n    //在头部比对，尾部比对，交叉比对的情况下，都是将老节点在新节点指针的位置进行插入或者删除\n    //如果批量向页面中插入内容，浏览器会自动优化\n    \n    if(!oldStartVnode){//在乱序对比的时候，节点可能在移动后被移除\n      oldStartVnode = oldChildren[++oldStartIndex];\n    }else if(!oldEndVnode){//在乱序对比的时候，节点可能在移动后被移除\n      oldEndVnode = oldChildren[--oldEndIndex];\n    }else if(isSameVnode(oldStartVnode,newStartVnode)){// 从头部开始对比\n      //如果是相同节点就递归比价子节点\n      patchVnode(oldStartVnode,newStartVnode);\n      oldStartVnode = oldChildren[++oldStartIndex];\n      newStartVnode = newChildren[++newStartIndex];\n    }else if(isSameVnode(oldEndVnode,newEndVnode)){//从尾部开始对比\n      patchVnode(oldEndVnode,newEndVnode);\n      oldEndVnode = oldChildren[--oldEndIndex];\n      newEndVnode = newChildren[--newEndIndex];\n    }else if(isSameVnode(oldEndVnode,newStartVnode)){//交叉比对 新头和旧尾对比\n      patchVnode(oldEndVnode,newStartVnode);\n      //将老的尾巴移动到老的开头的前面\n      el.insertBefore(oldEndVnode.el,oldStartVnode.el);\n      oldEndVnode = oldChildren[--oldEndIndex];\n      newStartVnode = newChildren[++newStartIndex];\n    }else if(isSameVnode(oldStartVnode,newEndVnode)){//交叉比对 新尾和旧头对比\n      patchVnode(oldStartVnode,newEndVnode);\n      //将老的头部移动到老末尾的下一个元素的前面\n      el.insertBefore(oldStartVnode.el,oldEndVnode.el.nextSibiling);\n      oldStartVnode = oldChildren[++oldStartIndex];\n      newEndVnode = newChildren[--newEndIndex];\n    }else{\n      // 乱序比对\n      // 根据老的列表做一个映射关系，用新的去找，找到就移动，最后多余的就删除\n      let moveIndex = map[newStartVnode.key];\n      if(moveIndex !== undefined){\n        let moveVnode = oldChildren[moveIndex];//找到对应的虚拟节点复用\n        el.insertBefore(moveVnode.el,oldStartVnode.el);//将节点插入到老开始指针指向的节点之前\n        oldChildren[moveIndex] = undefined;//表示这个节点已经移动过了\n        patchVnode(moveVnode,newStartVnode);//对比属性和子节点\n      }else{\n        //没有找到，表示新增，将节点插入到老开始指针指向的节点之前\n        el.insertBefore(createElm(newStartVnode),oldStartVnode.el);\n      }\n      // 对比之后继续下一个对比\n      newStartVnode = newChildren[++newStartIndex];\n    } \n  }\n  //while结束说明有一方的头指针大于尾指针\n  //如果新节点头指针小于尾指针，说明之间的节点都是新增的\n  if(newStartIndex <= newEndIndex){\n    for(let i = newStartIndex;i <= newEndIndex;i++){\n      let childEl = createElm(newChildren[i]);\n      //可能是在后面追加也可能是在前面追加\n      //当新节点的头指针的下一个还有元素的时候表示在下一个元素的前面追加\n      //如果下一个元素没有就表示是在末尾追加\n      let anchor = newChildren[newEndIndex + 1] ? newChildren[newEndIndex + 1].el : null;\n      el.insertBefore(childEl,anchor);//当 anchor 为 null 的时候 insetBefore 就会使用 appendChild\n    }\n  }\n  //如果旧节点头指针小于尾指针，说明之间的节点都是需要删除的\n  if(oldStartIndex <= oldEndIndex){\n    for(let i = oldStartIndex;i <= oldEndIndex;i++){\n      //在乱序比对的时候，可能会被移走后设置为 undefined\n      if(oldChildren[i]){\n        let childEl = oldChildren[i].el;\n        el.removeChild(childEl);\n      }\n    }\n  }\n}","import Watcher from \"./observe/watcher\";\nimport { createElementVNode, createTextVNode } from \"./vdom\"\nimport { patch } from \"./vdom/patch\";\n\nexport function initLifeCycle(Vue){\n  /**将虚拟DOM转化成真实DOM */\n  Vue.prototype._update = function(vnode){\n    const vm = this;\n    const el = vm.$el;\n    //patch 既有初始化的功能，又有更新的方法\n    vm.$el = patch(el,vnode);\n  }\n  /**生成虚拟节点 */\n  Vue.prototype._c = function(){\n    return createElementVNode(this,...arguments);\n  }\n  /**生成文本虚拟节点 */\n  Vue.prototype._v = function(){\n    return createTextVNode(this,...arguments);\n  }\n  /**生成虚拟DOM */\n  Vue.prototype._s = function(value){\n    if(typeof value !== 'object') return value;\n    return JSON.stringify(value);\n  }\n  /**生成虚拟DOM */\n  Vue.prototype._render = function(){\n   const vm = this;\n   //当渲染的时候回去实例中取值，就可以将属性和视图绑定在一起了\n   return vm.$options.render.call(vm);//通过ast语法转义后生成的render方法\n  }\n}\n\n/**将组件挂载到DOM上 */\nexport function mountComponent(vm,el){\n  // 将节点挂载到实例上，方便之后访问\n  vm.$el = el;\n  // 1.调用render方法产生虚拟节点，虚拟DOM\n  const updateComponent = () => {\n    vm._update(vm._render());\n  }\n\n  new Watcher(vm,updateComponent,true);\n  \n\n  // 2.根据虚拟DOM产生真实DOM\n\n  // 3.插入到el元素中\n\n}\n\n/**\n * vue核心流程\n * 1.创造响应式数据\n * 2.模版转换成ast语法树\n * 3.将ast语法树转换成了render函数\n * 4.后续每次数据更新可以只执行render函数（无需再次执行ast转化的过程）\n */\n\n// render 函数会去产生虚拟节点（使用响应式数据）\n// 根据生成的虚拟节点创造正式的DOM\n\n// ---------------------------------------------------------------------\n\n/**调用选项中的生命钩子函数 */\nexport function callHook(vm,hook){\n  const handlers = vm.$options[hook];\n  if(handlers){\n    handlers.forEach(handler => handler.call(vm));\n  }\n}\n","// 重写数组中的部分方法\nlet oldArrayProto = Array.prototype;\n// 先复制一份原型\nexport let newArrayProto = Object.create(oldArrayProto);\n\n//列举出所有需要重新的方法\nlet methods = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'sort',\n  'reverse',\n  'splice'\n];\n\n// 开始重新方法\nmethods.forEach(item => {\n  //重写方法\n  newArrayProto[item] = function(...args){\n    // 内部还是调用原来的方法\n    const result = oldArrayProto[item].call(this,...args);\n    // 当新增数据时，还需要对新数据进行观察\n    let inserted;\n    let ob = this.__ob__;\n    switch(item){\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice'://[1,2,3].splice(1,0,4,5);表示在2的位置插入 4，5\n        inserted = args.slice(2);\n        break;\n      default:\n        break;\n    }\n    if(inserted){\n      //对新增的数据进行观测\n      //这里唯一可以拿到的关联数据就是this，但是我们需要调用 Observer 中的 observeArray 来观察新数据\n      //而在创建 Observer 的时候又将 实例挂载到了 __ob__ 上，所以\n      ob.observeArray(inserted);\n    }\n\n    //数组变化了，通知对应的watcher实现更新\n    ob.dep.notify();\n    \n    return result;\n  }\n})","import { newArrayProto } from \"./array\";\nimport Dep from \"./dep\";\n\n/**通过 Object.defineProperty来劫持数据 */\nexport function observe(data){\n  //只能对对象进行劫持，所以要先进行判断\n  if(typeof data !== 'object' || data === null){\n    return;\n  }\n  //如果data 上有 __ob__ 并且是 Observer 时说明，这个对象已经被观测过了\n  if(data.__ob__ instanceof Observer){\n    return;\n  }\n\n  //如果一个对象已经被劫持过了，那就不用再被劫持\n  //（需要判断一个对象是否被劫持过，可以增添一个实例，用实例来判断是否被劫持过）\n  return new Observer(data);\n}\n\n/**观察者（被劫持对象） */\nclass Observer{\n  constructor(data){\n\n    //给每个对象都增加收集功能\n    this.dep = new Dep();\n\n    //Object.defineProperty只能劫持已经存在的属性（vue里面会为添加，删除属性的方法添加一些api，如$set,$delete）\n    \n    //将当前实例赋值给__ob__属性保存下来，方便在其他的地方调用实例的方法\n    //并且添加这个标识之后就可以知道这个数据已经被观察过了，不用在进行观察\n    // data.__ob__ = this;\n    //不过直接这样添加的话，在调用 this.walk(data) 的时候会形成死循环，可以这样解决\n    Object.defineProperty(data,\"__ob__\",{\n      value:this,\n      enumerable:false,//不可枚举，循环时就获取不了\n    })\n\n    if(Array.isArray(data)){\n      //当值为数组的也是可以对其进行劫持的，但是数组长度很长的时候就会非常消耗性能\n      //而且一般也不会通过索引来访问很设置值，所以vue中并不会劫持数组，而是重构数组的方法来实现响应式数据\n      data.__proto__ = newArrayProto;\n      //如果数组中的某个元素是对象的时候也是需要对其进行劫持的\n      this.observeArray(data);\n    }else{\n      this.walk(data);\n    }\n  }\n  walk(data){\n    //循环对象，对每个数据都进行劫持\n    //每次劫持都是一个重新定义属性的过程，所以会比较耗性能\n    Object.keys(data).forEach(key => {\n      defineReactive(data,key,data[key]);\n    })\n  }\n  observeArray(data){\n    data.forEach(item => observe(item));\n  }\n}\n\n/**重新定义属性 */\nexport function defineReactive(target,key,value){\n  //如果值是对象，那么还需要继续对数据进行劫持\n  let childOb = observe(value);//childOb.dep 用来收集依赖\n  //为每个属性创建一个dep,闭包中不会被销毁\n  let dep = new Dep();\n  //这里用到了 闭包 来保存 value 值。\n  Object.defineProperty(target,key,{\n    get(){\n      //取值时\n      if(Dep.target){//当进行普通的取值使用的时候不需要进行依赖收集\n        dep.depend();//让这个属性的收集器记住当前的watcher\n        if(childOb){\n          //让数组和对象本身也实现依赖收集\n          childOb.dep.depend();\n          //如果值是一个数组的话，还需要对里面的值进行依赖收集\n          //解决多维数组的问题\n          if(Array.isArray(value)){\n            dependArray(value);\n          }\n        }\n      }\n      return value;\n    },\n    set(newVal){\n      //设置值时\n      if(newVal === value) return;\n      //如果设置的值是一个对象时，需要继续对这个对象进行劫持\n      observe(newVal);\n      value = newVal;\n      dep.notify();//设置值的时候通知watcher更新渲染\n    }\n  })\n}\n\n/**收集数组数据的依赖 */\nfunction dependArray(value){\n  for(let i = 0;i < value.length;i++){\n    let current = value[i];\n    current.__ob__ && current.__ob__.dep.depend();\n    if(Array.isArray(current)){\n      dependArray(current);\n    }\n  }\n}","import { observe } from \"./observe\";\nimport Dep from \"./observe/dep\";\nimport Watcher, { nextTick } from \"./observe/watcher\";\n\n/**初始化状态 */\nexport function initState(vm){\n  const opts = vm.$options;//获取用户的选项\n  if(opts.data){\n    //初始化数据，生成相应式数据\n    initData(vm);\n  }\n  if(opts.computed){\n    //初始化计算属性\n    initComputed(vm);\n  }\n  if(opts.watch){\n    //初始化监控\n    initWatch(vm);\n  }\n}\n\n/**初始化数据，生成相应式数据 */\nfunction initData(vm){\n  let data = vm.$options.data;\n  //如果data 是函数还需要先执行才能回去到要劫持的数据\n  data = typeof data === 'function' ? data.call(vm) : data;\n  \n  //进行数据劫持，来创建响应式数据\n  observe(data);\n\n  //为了方便之后访问 data，给实例挂载一个 _data\n  vm._data = data;\n  //但是这样的话就需要使用 vm._data.xxx 来访问，这样不够优雅\n  //所以可以将 vm._data 用vm来代理就可以用 vm.xxx来访问 _data 中的属性了\n  for(let key in data){\n    proxy(vm,'_data',key);\n  }\n}\n\n/**代理 */\nfunction proxy(vm,target,key){\n  Object.defineProperty(vm,key,{\n    get(){\n      return vm[target][key]\n    },\n    set(newVal){\n      vm[target][key] = newVal\n    }\n  })\n}\n\n/**初始化计算属性 */\nfunction initComputed(vm){\n  const computed = vm.$options.computed;\n  //将计算属性的所有watcher都保存到vm上\n  const watchers = vm._computedWatchers = {};\n  for(let key in computed){\n    let userDef = computed[key];\n    //需要一个computed 的 watcher 来维护计算属性，方便实现之后的缓存\n    //需要监控计算属性中的get变化\n    let fn = typeof userDef == 'function' ? userDef : userDef.get;\n    //如果直接new Watcher默认就会执行fn,所以需要添加一个{lazy:true}来让他在使用的时候再至执行\n    //将计算属性和wathcer对应起来\n    watchers[key] = new Watcher(vm,fn,{lazy:true});\n\n    defineComputed(vm,key,userDef);\n  }\n}\n\n/**为实例挂载上计算属性 */\nfunction defineComputed(target,key,userDef){\n  //getter可能是一个 function 也可能是对象\n  const getter = typeof userDef == 'function' ? userDef : userDef.get;\n  const setter = userDef.set || (()=>{});\n  //当调用 render 渲染函数的时候，会访问计算属性\n  //计算属性函数调用的时候也会访问data的属性，从而获取到完整的值\n  //但是不能直接使用watcher，因为需要检查依赖的属性是否发生变化\n  Object.defineProperty(target,key,{\n    get:createComputedGetter(key),\n    set:setter,\n  })\n}\n\n//计算属性根本不会收集依赖，只会让自己的依赖属性去收集依赖\n/**创建计算属性getter */\nfunction createComputedGetter(key){\n  return function (){\n    //当前 this 是指向 vm 的\n    //所以 可以直接从this 上获取到全部的 计算属性watcher\n    const watcher = this._computedWatchers[key];\n    if(watcher.dirty){\n      // 执行用户传入的getter\n      watcher.evaluate();\n    }\n    /**\n     * 在计算属性依赖的属性发生变化的时候触发的是计算属性的watcher更新\n     * 并不会触发 渲染watcher的更新 ，所以页面并不会更新\n     * 所以计算属性依赖的属性也需要去收集 渲染watcher\n     */\n    //当第一次渲染的时候执行了 watcher 中 get 方法\n    //此时 渲染watcher 会被存放到wathcer缓存栈中\n    //在渲染的过程中发现使用到了计算属性，然后 计算属性watcher 被创建，并存放到 watcher 缓存栈中\n    //此时的watcher缓存栈就是 [渲染watcher，计算属性watcher]\n    //之后 计算属性watcher 调用evaluate()取值后出栈，watcher缓存栈就剩下 渲染watcher\n    //所以 watcher缓存栈 栈顶就是渲染watcher （Dep.target）\n    //所以可以让计算属性依赖的属性去收集上层的watcher（渲染watcher）\n    if(Dep.target){\n      watcher.depend();\n    }\n    return watcher.value;\n  }\n}\n\n/**初始化监控 */\nfunction initWatch(vm){\n  let watch = vm.$options.watch;\n  for(let key in watch){\n    const handler = watch[key];\n    //值有几种情况，字符串、数组、函数、对象\n    //现在只考虑前三种情况，而且不考虑深度监控的情况\n    if(Array.isArray(handler)){\n      for(let i = 0;i<handler.length;i++){\n        createWatcher(vm,key,handler[i]);\n      }\n    }else{\n      //字符串、函数\n      createWatcher(vm,key,handler);\n    }\n  }\n}\n\n/**创建 watch */\nfunction createWatcher(vm,key,handler){\n  //字符串时取\n  if(typeof handler === 'string'){\n    handler = vm.$options.methods[handler];\n  }\n  return vm.$watch(key,handler);\n}\n\n/**初始化nextTick $watch */\nexport function initStateMixin(Vue){\n  Vue.prototype.$nextTick = nextTick;\n  //最终调用的都是这个方法\n  Vue.prototype.$watch = function(exprOrFn,cb){\n    // 创建一个 Watcher\n    // 当监听的值发生变化的时候执行回调\n    // {user:true} 标志是用户自定定义的\n    new Watcher(this,exprOrFn,{user:true},cb);\n  }\n}","import { compileToFunction } from \"./compiler\";\nimport { callHook, mountComponent } from \"./lifecycle\";\nimport { initState } from \"./state\";\nimport { mergeOptions } from \"./utils\";\n\n/**\n * 初始化函数，就是为Vue添加_init方法\n * @param { Vue构造函数 } Vue \n */\nexport function initMixin(Vue){\n  Vue.prototype._init = function(options){\n    //将 options 挂载到 实例的 $options 上方便后续方法的访问\n    const vm = this;\n    //合并选项并赋值,定义的全局过滤器，指令等都会挂载上去\n    // this 指向Vue实例，在实例上没有constructor，但是会在原型链上查找\n    vm.$options = mergeOptions(this.constructor.options,options);\n    \n    // 调用生命周期函数\n    callHook(vm,\"beforeCreate\");\n    // 初始化状态，计算属性，watch\n    initState(vm);\n    // 调用生命周期函数\n    callHook(vm,\"beforeCreate\");\n\n    // 实现数据的挂载\n    if(options.el){\n      vm.$mount(options.el);\n    }\n  }\n  Vue.prototype.$mount = function(el){\n    const vm = this;\n    el = document.querySelector(el);\n    let opts = vm.$options;\n    //优先级 render > template > el\n    if(!opts.render){//查看是否有render函数\n      // 没有render函数，表示并不是用户自己写的渲染方法\n      // 如果没有template，有el就使用el作为模版，如果有template就使用template\n      let template;\n      if(!opts.template && el){\n        template = el.outerHTML;\n      }else{\n        if(el){//如果有el则采用模版内容\n          template = opts.template;\n        }\n      }\n      if(template){\n        //这里需要对模版进行编译\n        const render = compileToFunction(template);\n        opts.render = render;// jsx 最终会被编译成 h('xxx')\n      }\n    }\n\n    //组件挂载\n    mountComponent(vm,el);\n\n    //最终就可以获取render方法\n\n    // script 标签引用的 vue.global.js 这个编译过程是在浏览器运行的\n    // runtime 是不包含模版编译的，整个编译时打包的时候通过loader来进行转义.vue文件的\n    // 所以用runtime的时候不能使用template\n  }\n}","import { compileToFunction } from \"./compiler\";\nimport { initGlobalAPI } from \"./globalAPI\";\nimport { initMixin } from \"./init\";\nimport { initLifeCycle } from \"./lifecycle\";\nimport { initStateMixin } from \"./state\";\nimport { createElm, patch } from \"./vdom/patch\";\n\n// 不使用 class 来定义Vue 原因是，class会将所有的方法都封装到一起，导致耦合度过大，不便于管理和拆分\nfunction Vue(options){//options 就是用户的选项\n  this._init(options);\n}\n\n// 添加方法\ninitMixin(Vue);//扩展init方法\ninitLifeCycle(Vue); //vm._update,vm._render\ninitGlobalAPI(Vue);//全部 API\ninitStateMixin(Vue);//实现 nextTick $watch\n\n//------------- 观察前后节点，测试 -------------\n\nlet vm = new Vue({data:{name:'jack'}});\nlet render1 = compileToFunction(\n`<ul>\n<li key=\"1\">1</li>\n<li key=\"2\">2</li>\n<li key=\"3\">3</li>\n</ul>`\n);\nlet preVNode = render1.call(vm);\nlet el1 = createElm(preVNode);\n\nlet render2 = compileToFunction(\n`<ul>\n<li key=\"8\">8</li>\n<li key=\"4\">4</li>\n<li key=\"3\">3</li>\n<li key=\"9\">9</li>\n<li key=\"5\">5</li>\n<li key=\"2\">2</li>\n<li key=\"6\">6</li>\n<li key=\"7\">7</li>\n<li key=\"10\">10</li>\n</ul>`\n);\n\n\nlet nextVNode = render2.call(vm);\nlet el2 = createElm(nextVNode);\n\ndocument.body.appendChild(el1);\n//以往都是直接替换掉整个元素\n//在每次获取dom的时候都要重新计算dom位置以及其他的一些属性\n//而且在创建dom的时候会初始化很多dom中的属性和方法\n//所以这样做是比较耗性能\nsetTimeout(()=>{\n  patch(preVNode,nextVNode)\n  el1.parentNode.replaceChild(el2,el1);\n},3000)\n\n\nconsole.log(preVNode,nextVNode);\n\nexport default Vue;"],"names":["ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","node","push","chars","text","replace","end","pop","length","advance","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","genProps","str","i","obj","split","forEach","item","key","JSON","stringify","slice","defaultTagRE","gen","codegen","test","token","lastIndex","exec","index","trim","join","genChildren","map","child","ast","code","compileToFunction","template","render","Function","mergeOptions","options","mergeField","hasOwnProperty","strats","LIFECYCLE","hook","p","c","concat","initGlobalAPI","Vue","mixin","id","Dep","subs","target","addDep","watcher","update","pushTarget","popTarget","Watcher","vm","exprOrFn","cb","renderWatcher","getter","user","deps","depsId","Set","lazy","dirty","undefined","get","call","dep","has","add","addSub","depend","queueWatcher","oldVal","newVal","flushSchedulerQueue","flushQueue","queue","pending","q","run","nextTick","flushCallbacks","cbs","callbacks","waiting","timerFunc","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","observe","characterData","textContent","setImmediate","setTimeout","createElementVNode","data","vnode","createTextVNode","isSameVnode","vnode1","vnode2","createElm","el","createElement","patchProps","appendChild","oldProps","props","oldStyle","style","newStyle","removeAttribute","styleName","setAttribute","patch","oldVNode","console","log","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibiling","removeChild","patchVnode","replaceChild","oldChildren","newChildren","updateChildren","mountChildren","innerHTML","oldStartIndex","newStartIndex","oldEndIndex","newEndIndex","oldStartVnode","newStartVnode","oldEndVnode","newEndVnode","makeIndexByKey","moveIndex","moveVnode","childEl","anchor","initLifeCycle","prototype","_update","$el","_c","arguments","_v","_s","_render","$options","mountComponent","updateComponent","callHook","handlers","handler","oldArrayProto","Array","newArrayProto","Object","create","methods","args","result","inserted","ob","__ob__","observeArray","notify","Observer","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","childOb","dependArray","set","current","initState","opts","initData","computed","initComputed","watch","initWatch","_data","proxy","watchers","_computedWatchers","userDef","fn","defineComputed","setter","createComputedGetter","evaluate","createWatcher","$watch","initStateMixin","$nextTick","initMixin","_init","constructor","$mount","querySelector","outerHTML","render1","preVNode","el1","render2","nextVNode","el2","body"],"mappings":"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"}